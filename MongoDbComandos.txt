Comandos MongoDb

// Criar um novo BD
	use(database);

// Criar um novo documento/coleção
	db.createCollection(collection);

// Deletar uma coleção
	db.series.drop();

// Deletar um BD
	db.dropDatabase()


// Inserindo um documento no documento "Serie"
use(database);
db.series.insertOne({
    "Série": "Fleabag",
    "Ano de lancamento": 2016,
    "Temporadas disponíveis": 2,
    "Linguagem": "Inglês",
    "IMdb Avaliação" : 8.7
});


// Inserindo um array de documentos via InsertMany
use("Alura_Serie");
db.series.insertMany([{
    "Série": "Made in Heaven",
    "Temporadas disponíveis": 1,
    "Linguagem": "Hindi", 
    "IMdb Avaliação" : 8.3,
    "Classificação": "18+"
},
{
    "Série": "Homecoming",
    "Temporadas disponíveis": 2,
    "Linguagem": "Inglês",
    "Genero": ["Drama"],
    "IMdb Avaliação" : 8.7,
    "Classificação": "16+"
}]);


// Retornando todos os documentos de uma collection
	db.series.find();

// Retornando todos os documentos de uma collection cujo Ano de lançamento seja igual a 2016
	db.series.find({"Ano de lancamento": 2016});

// Retornando apenas determinadas "colunas" dentro do documento
	db.series.find({}, {"Série": 1, "Ano de lancamento": 1, "_id": 0});

// Retornando todos os documentos que possuem ano de lançamento iguais a 2016 ou 2017
	db.series.find({"Ano de lancamento": {$in: [2016, 2017]}});

// Limitando o retorno dos documentos
	db.series.find().limit(2);

// Ordenando o retorno da busca com base em um campo específico
	db.series.find().sort({"Série": 1});

// Retornando os documentos com base no filtro gte
	db.series.find({"Temporadas disponíveis": {$gte: 2}});

// Retornando os documentos cujo o valor seja diferente do informado no filtro
	db.series.find({"Temporadas disponíveis": {$ne: 2}});

// Retornando documentos que possuem um array com determinado valor
	db.series.find({"Genero": {$all: ["Drama"]}});


// Atualizando um documento e adicionando uma nova propriedade ao mesmo caso essa não exista
	db.series.updateOne({"Série": "Made in Heaven"}, {$set: {"Ano de lancamento": 2015}});

// Atualizando todos os documentos cujo o texto da propriedade Série esteja dentro do array informado
// e adiciona ou atualiza a propriedade Classificação nos documentos retornados
	db.series.updateMany({"Série":{$in:["Homecoming", "Fleabag"]}},{$set: {"Classificação": "18+"}})

// É possível substituir um documento inteiro com base no filtro utilizando o método replaceOne
	db.collection.replaceOne(
   		<filter>,
   		<replacement> )



